# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  # check-build:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Clone repo
  #       uses: actions/checkout@v2
  #     - name: setup node
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '16.3.0'
  #     - name: install dependencies
  #       run: npm install
  #     - name: generate build
  #       run: npm run build --prefix client
  #       env:
  #         CI: false
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
#      - uses: actions/checkout@v2
      #      - name: update database
      #        run: |
      #          mysql -h ${{ secrets.CLEARDB_HOST }} -u ${{ secrets.CLEARDB_USER }} --password=${{ secrets.CLEARDB_PW }} -D ${{ secrets.CLEARDB_DB }} < database/DDQ_file.sql


       #      - name: deploy on heroku via docker
       #        env:
       #          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
       #          APP_NAME: ${{ 'pet-hotel-luxury-lodging' }}
       #        run: |
       #          docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
       #          heroku container:push web -a $APP_NAME
       #          heroku container:release web -a $APP_NAME
       - name: deploy on flip
         uses: garygrossgarten/github-action-ssh@release
         with:
           command: |
             cd CS361-Project
             git pull
             npm install
             npm run build --prefix mac-app
             forever stopall
             forever start server.js
             forever list
           host: ${{ secrets.FLIP_HOST }}
           username: penceg
           passphrase: ${{secrets.FLIP_KEY_PASSPHRASE}}
           privateKey: ${{ secrets.FLIP_KEY }}